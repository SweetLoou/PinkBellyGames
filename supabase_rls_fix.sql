-- =================================================================
-- Supabase RLS Policies for the 'site_stats' table
-- Dialect: PostgreSQL
--
-- NOTE: This script uses PostgreSQL-specific syntax. If your
-- editor shows MSSQL linter errors, you may need to change
-- the language mode to "PostgreSQL" for this file.
-- =================================================================

-- Step 1: Create the site_stats table if it doesn't exist.
-- This table logs basic site visit information.
CREATE TABLE IF NOT EXISTS public.site_stats (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    path text,
    user_agent text,
    created_at timestamptz DEFAULT now() NOT NULL
);

-- Step 2: Enable Row Level Security (RLS) on the table.
-- This is required before any access policies can be applied.
ALTER TABLE public.site_stats ENABLE ROW LEVEL SECURITY;

-- Step 3: Create RLS policies to control access.

-- POLICY: Allow any user (anonymous or authenticated) to insert new records.
-- This is necessary to log all site visits.
CREATE POLICY "Allow public insert access"
ON public.site_stats
FOR INSERT
TO anon, authenticated
WITH CHECK (true);

-- POLICY: Explicitly deny read access to everyone.
-- Data should only be queried by a privileged role (e.g., service_role) from a secure backend.
CREATE POLICY "Deny all read access"
ON public.site_stats
FOR SELECT
USING (false);

-- POLICY: Explicitly deny updates to prevent modification of log data.
CREATE POLICY "Deny all update access"
ON public.site_stats
FOR UPDATE
USING (false);

-- POLICY: Explicitly deny deletions to prevent removal of log data.
CREATE POLICY "Deny all delete access"
ON public.site_stats
FOR DELETE
USING (false);
